type User @model @key(name: "byUser", fields: ["id", "username", "firstname", "lastname", "email", "role"]) @auth(rules: [{allow: owner, operations: [read, update]}]) {
  id: ID!
  firstname: String!
  lastname: String
  username: String
  password: String
  email: String
  role: Designation
  picture: S3Object
  status: Status
}

type Squad @model @auth(rules: [{allow: private}]) {
  id: ID!
  squadname: String!
  productowner: [User] @connection(keyName: "byUser", fields: ["id"])
  scrummaster: [User] @connection(keyName: "byUser", fields: ["id"])
  scrumteam: [User] @connection(keyName: "byUser", fields: ["id"])
  velocity: Int
  status: Status
  createdby: String
  updatedby: String
}

type S3Object {
  bucket: String!
  region: String!
  key: String!
}

enum Designation {
  developer
  qualityanalyst
  businessanalyst
  productowner
  scrummaster
  manager
}

enum Status {
  active
  inactive
}
 